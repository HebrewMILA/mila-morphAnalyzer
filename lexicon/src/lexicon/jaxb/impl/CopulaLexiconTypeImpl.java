//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.12.23 at 10:34:08 AM IST 
//


package lexicon.jaxb.impl;

public class CopulaLexiconTypeImpl implements lexicon.jaxb.CopulaLexiconType, com.sun.xml.bind.JAXBObject, lexicon.jaxb.impl.runtime.UnmarshallableObject, lexicon.jaxb.impl.runtime.XMLSerializable, lexicon.jaxb.impl.runtime.ValidatableObject
{

    protected java.lang.String _Tense;
    protected java.lang.String _Gender;
    protected java.lang.String _Number;
    protected com.sun.xml.bind.util.ListImpl _AddOrReplaceOrRemove;
    protected java.lang.String _Polarity;
    protected java.lang.String _Person;
    public final static java.lang.Class version = (lexicon.jaxb.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (lexicon.jaxb.CopulaLexiconType.class);
    }

    public java.lang.String getTense() {
        if (_Tense == null) {
            return "unspecified";
        } else {
            return _Tense;
        }
    }

    public void setTense(java.lang.String value) {
        _Tense = value;
    }

    public java.lang.String getGender() {
        if (_Gender == null) {
            return "unspecified";
        } else {
            return _Gender;
        }
    }

    public void setGender(java.lang.String value) {
        _Gender = value;
    }

    public java.lang.String getNumber() {
        if (_Number == null) {
            return "unspecified";
        } else {
            return _Number;
        }
    }

    public void setNumber(java.lang.String value) {
        _Number = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getAddOrReplaceOrRemove() {
        if (_AddOrReplaceOrRemove == null) {
            _AddOrReplaceOrRemove = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _AddOrReplaceOrRemove;
    }

    public java.util.List getAddOrReplaceOrRemove() {
        return _getAddOrReplaceOrRemove();
    }

    public java.lang.String getPolarity() {
        if (_Polarity == null) {
            return "unspecified";
        } else {
            return _Polarity;
        }
    }

    public void setPolarity(java.lang.String value) {
        _Polarity = value;
    }

    public java.lang.String getPerson() {
        if (_Person == null) {
            return "unspecified";
        } else {
            return _Person;
        }
    }

    public void setPerson(java.lang.String value) {
        _Person = value;
    }

    public lexicon.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(lexicon.jaxb.impl.runtime.UnmarshallingContext context) {
        return new lexicon.jaxb.impl.CopulaLexiconTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(lexicon.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx4 = 0;
        final int len4 = ((_AddOrReplaceOrRemove == null)? 0 :_AddOrReplaceOrRemove.size());
        while (idx4 != len4) {
            while (idx4 != len4) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _AddOrReplaceOrRemove.get(idx4 ++)), "AddOrReplaceOrRemove");
            }
        }
    }

    public void serializeAttributes(lexicon.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx4 = 0;
        final int len4 = ((_AddOrReplaceOrRemove == null)? 0 :_AddOrReplaceOrRemove.size());
        if (_Gender!= null) {
            context.startAttribute("", "gender");
            try {
                context.text(((java.lang.String) _Gender), "Gender");
            } catch (java.lang.Exception e) {
                lexicon.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Number!= null) {
            context.startAttribute("", "number");
            try {
                context.text(((java.lang.String) _Number), "Number");
            } catch (java.lang.Exception e) {
                lexicon.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Person!= null) {
            context.startAttribute("", "person");
            try {
                context.text(((java.lang.String) _Person), "Person");
            } catch (java.lang.Exception e) {
                lexicon.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Polarity!= null) {
            context.startAttribute("", "polarity");
            try {
                context.text(((java.lang.String) _Polarity), "Polarity");
            } catch (java.lang.Exception e) {
                lexicon.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Tense!= null) {
            context.startAttribute("", "tense");
            try {
                context.text(((java.lang.String) _Tense), "Tense");
            } catch (java.lang.Exception e) {
                lexicon.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        while (idx4 != len4) {
            while (idx4 != len4) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AddOrReplaceOrRemove.get(idx4 ++)), "AddOrReplaceOrRemove");
            }
        }
    }

    public void serializeURIs(lexicon.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx4 = 0;
        final int len4 = ((_AddOrReplaceOrRemove == null)? 0 :_AddOrReplaceOrRemove.size());
        while (idx4 != len4) {
            while (idx4 != len4) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AddOrReplaceOrRemove.get(idx4 ++)), "AddOrReplaceOrRemove");
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (lexicon.jaxb.CopulaLexiconType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000 com."
+"sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.gramm"
+"ar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003ppsr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\rppsq\u0000~\u0000\rppsq\u0000~\u0000\nsr\u0000\u0011j"
+"ava.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.gramm"
+"ar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv"
+"/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q"
+"\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\nq\u0000~\u0000\u0013psr\u0000 com.sun.msv.grammar.AttributeE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0015xq\u0000~\u0000\u0003q\u0000~\u0000\u0013psr\u00002com"
+".sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
+"\u0000~\u0000\u0003sq\u0000~\u0000\u0012\u0001q\u0000~\u0000\u001dsr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun"
+".msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000"
+"~\u0000\u001eq\u0000~\u0000#sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000"
+"\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000%xq\u0000~\u0000 t\u0000\""
+"lexicon.jaxb.CopulaLexiconType.Addt\u0000+http://java.sun.com/jax"
+"b/xjc/dummy-elementsq\u0000~\u0000#sq\u0000~\u0000\nppsq\u0000~\u0000\u0014pp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\nq\u0000~\u0000"
+"\u0013psq\u0000~\u0000\u001aq\u0000~\u0000\u0013pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000&lexicon.jaxb.CopulaLex"
+"iconType.Replaceq\u0000~\u0000(sq\u0000~\u0000\nppsq\u0000~\u0000\u0014pp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\nq\u0000~\u0000\u0013psq"
+"\u0000~\u0000\u001aq\u0000~\u0000\u0013pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000%lexicon.jaxb.CopulaLexicon"
+"Type.Removeq\u0000~\u0000(sq\u0000~\u0000\rppsq\u0000~\u0000\u001aq\u0000~\u0000\u0013psr\u0000\u001bcom.sun.msv.grammar."
+"DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006"
+"exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr"
+"\u0000)com.sun.msv.datatype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006val"
+"uest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.datatype.xsd.DataTypeWi"
+"thValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xs"
+"d.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueChe"
+"ckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl"
+";L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000"
+"\tfacetNameq\u0000~\u0000%xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000%L\u0000\btypeNameq\u0000~\u0000%L\u0000\nwhiteSpacet\u0000"
+".Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000\u0000t\u0000\nGende"
+"rTypesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collap"
+"se\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcesso"
+"r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0000\u0000sr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\ris"
+"AlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000Ct\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005tokenq\u0000~\u0000J\u0001q\u0000~\u0000O"
+"t\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000"
+"\u0000\u0004t\u0000\u000bunspecifiedt\u0000\bfemininet\u0000\u0016masculine and femininet\u0000\tmascu"
+"linexsr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000"
+"\tlocalNameq\u0000~\u0000%L\u0000\fnamespaceURIq\u0000~\u0000%xpq\u0000~\u0000Gq\u0000~\u0000Fsq\u0000~\u0000$t\u0000\u0006gend"
+"erq\u0000~\u0000Fq\u0000~\u0000#sq\u0000~\u0000\rppsq\u0000~\u0000\u001aq\u0000~\u0000\u0013psq\u0000~\u00009ppsq\u0000~\u0000=q\u0000~\u0000Ft\u0000\nNumber"
+"Typeq\u0000~\u0000J\u0000\u0000q\u0000~\u0000Oq\u0000~\u0000Oq\u0000~\u0000Rsq\u0000~\u0000Sw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0006t\u0000\u000bunspecified"
+"t\u0000\u0013singular and pluralt\u0000\u0004dualt\u0000\u000fdual and pluralt\u0000\bsingulart\u0000"
+"\u0006pluralxq\u0000~\u0000Zsq\u0000~\u0000[q\u0000~\u0000cq\u0000~\u0000Fsq\u0000~\u0000$t\u0000\u0006numberq\u0000~\u0000Fq\u0000~\u0000#sq\u0000~\u0000\r"
+"ppsq\u0000~\u0000\u001aq\u0000~\u0000\u0013psq\u0000~\u00009ppsq\u0000~\u0000=q\u0000~\u0000Ft\u0000\nPersonTypeq\u0000~\u0000J\u0000\u0000q\u0000~\u0000Oq\u0000"
+"~\u0000Oq\u0000~\u0000Rsq\u0000~\u0000Sw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0005t\u0000\u000bunspecifiedt\u0000\u00013t\u0000\u00012t\u0000\u0003anyt\u0000\u00011"
+"xq\u0000~\u0000Zsq\u0000~\u0000[q\u0000~\u0000rq\u0000~\u0000Fsq\u0000~\u0000$t\u0000\u0006personq\u0000~\u0000Fq\u0000~\u0000#sq\u0000~\u0000\rppsq\u0000~\u0000"
+"\u001aq\u0000~\u0000\u0013psq\u0000~\u00009ppsq\u0000~\u0000=q\u0000~\u0000Ft\u0000\fPolarityTypeq\u0000~\u0000J\u0000\u0000q\u0000~\u0000Oq\u0000~\u0000Oq\u0000"
+"~\u0000Rsq\u0000~\u0000Sw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003t\u0000\u000bunspecifiedt\u0000\bnegativet\u0000\bpositivex"
+"q\u0000~\u0000Zsq\u0000~\u0000[q\u0000~\u0000\u0080q\u0000~\u0000Fsq\u0000~\u0000$t\u0000\bpolarityq\u0000~\u0000Fq\u0000~\u0000#sq\u0000~\u0000\rppsq\u0000~"
+"\u0000\u001aq\u0000~\u0000\u0013psq\u0000~\u00009ppsq\u0000~\u0000=q\u0000~\u0000Ft\u0000\tTenseTypeq\u0000~\u0000J\u0000\u0000q\u0000~\u0000Oq\u0000~\u0000Oq\u0000~\u0000"
+"Rsq\u0000~\u0000Sw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\bt\u0000\u000bunspecifiedt\u0000\u0004pastt\u0000\nimperativet\u0000\u0007be"
+"inonit\u0000\ninfinitivet\u0000\u0006futuret\u0000\u000ebareInfinitivet\u0000\u0011passivePartic"
+"iplexq\u0000~\u0000Zsq\u0000~\u0000[q\u0000~\u0000\u008cq\u0000~\u0000Fsq\u0000~\u0000$t\u0000\u0005tenseq\u0000~\u0000Fq\u0000~\u0000#sr\u0000\"com.su"
+"n.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/su"
+"n/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gr"
+"ammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamV"
+"ersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0017"
+"\u0001pq\u0000~\u0000\u0005q\u0000~\u0000\u0010q\u0000~\u0000_q\u0000~\u0000\u000fq\u0000~\u0000\u0006q\u0000~\u0000nq\u0000~\u0000\u0018q\u0000~\u0000+q\u0000~\u00002q\u0000~\u0000\bq\u0000~\u0000\fq\u0000~"
+"\u0000\u0011q\u0000~\u0000)q\u0000~\u00000q\u0000~\u00007q\u0000~\u0000\u000eq\u0000~\u0000\u0088q\u0000~\u0000\u0007q\u0000~\u0000\u0019q\u0000~\u0000,q\u0000~\u00003q\u0000~\u0000|q\u0000~\u0000\tx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public static class AddImpl
        extends lexicon.jaxb.impl.CopulaExceptionTypeImpl
        implements lexicon.jaxb.CopulaLexiconType.Add, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, lexicon.jaxb.impl.runtime.UnmarshallableObject, lexicon.jaxb.impl.runtime.XMLSerializable, lexicon.jaxb.impl.runtime.ValidatableObject
    {

        public final static java.lang.Class version = (lexicon.jaxb.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (lexicon.jaxb.CopulaLexiconType.Add.class);
        }

        public java.lang.String ____jaxb_ri____getNamespaceURI() {
            return "";
        }

        public java.lang.String ____jaxb_ri____getLocalName() {
            return "add";
        }

        public lexicon.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(lexicon.jaxb.impl.runtime.UnmarshallingContext context) {
            return new lexicon.jaxb.impl.CopulaLexiconTypeImpl.AddImpl.Unmarshaller(context);
        }

        public void serializeBody(lexicon.jaxb.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            context.startElement("", "add");
            super.serializeURIs(context);
            context.endNamespaceDecls();
            super.serializeAttributes(context);
            context.endAttributes();
            super.serializeBody(context);
            context.endElement();
        }

        public void serializeAttributes(lexicon.jaxb.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public void serializeURIs(lexicon.jaxb.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public java.lang.Class getPrimaryInterface() {
            return (lexicon.jaxb.CopulaLexiconType.Add.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"
+"ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"
+"mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"
+"q\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsr\u0000\u001bc"
+"om.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/da"
+"tatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/St"
+"ringPair;xq\u0000~\u0000\u0004ppsr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\ri"
+"sAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fna"
+"mespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001cL\u0000\nwhiteSpace"
+"t\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http:/"
+"/www.w3.org/2001/XMLSchemat\u0000\u0005tokensr\u00005com.sun.msv.datatype.x"
+"sd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.da"
+"tatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv."
+"grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004ppsr\u0000\u001bc"
+"om.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001cL\u0000\fnam"
+"espaceURIq\u0000~\u0000\u001cxpq\u0000~\u0000 q\u0000~\u0000\u001fsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004sr\u0000\u0011java.lang.Boolean"
+"\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000pq\u0000~\u0000\u0016sr\u0000#com.sun.msv.grammar.SimpleNa"
+"meClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001cL\u0000\fnamespaceURIq\u0000~\u0000\u001cxr\u0000\u001dc"
+"om.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0006dottedt\u0000\u0000sr\u00000com"
+".sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000\u0004sq\u0000~\u0000,\u0001q\u0000~\u00004sq\u0000~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-psq\u0000~\u0000\u0013ppsr\u0000)com.sun.msv.da"
+"tatype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util"
+"/Set;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstrain"
+"tFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFa"
+"cet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTyp"
+"et\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteType"
+"t\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001cx"
+"q\u0000~\u0000\u001bq\u0000~\u00002t\u0000\nGenderTypeq\u0000~\u0000#\u0000\u0000q\u0000~\u0000\u001eq\u0000~\u0000\u001et\u0000\u000benumerationsr\u0000\u0011ja"
+"va.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004t\u0000\u000bunspecifiedt\u0000\bf"
+"emininet\u0000\u0016masculine and femininet\u0000\tmasculinexq\u0000~\u0000%sq\u0000~\u0000&q\u0000~\u0000"
+"@q\u0000~\u00002sq\u0000~\u0000.t\u0000\u0006genderq\u0000~\u00002q\u0000~\u00004sq\u0000~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-psq\u0000~\u0000\u0013pps"
+"q\u0000~\u00009q\u0000~\u00002t\u0000\nNumberTypeq\u0000~\u0000#\u0000\u0000q\u0000~\u0000\u001eq\u0000~\u0000\u001eq\u0000~\u0000Asq\u0000~\u0000Bw\f\u0000\u0000\u0000\u0010?@\u0000"
+"\u0000\u0000\u0000\u0000\u0006t\u0000\u000bunspecifiedt\u0000\u0013singular and pluralt\u0000\u0004dualt\u0000\u000fdual and "
+"pluralt\u0000\bsingulart\u0000\u0006pluralxq\u0000~\u0000%sq\u0000~\u0000&q\u0000~\u0000Oq\u0000~\u00002sq\u0000~\u0000.t\u0000\u0006num"
+"berq\u0000~\u00002q\u0000~\u00004sq\u0000~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-psq\u0000~\u0000\u0013ppsq\u0000~\u00009q\u0000~\u00002t\u0000\nPerso"
+"nTypeq\u0000~\u0000#\u0000\u0000q\u0000~\u0000\u001eq\u0000~\u0000\u001eq\u0000~\u0000Asq\u0000~\u0000Bw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0005t\u0000\u000bunspecifie"
+"dt\u0000\u00013t\u0000\u00012t\u0000\u0003anyt\u0000\u00011xq\u0000~\u0000%sq\u0000~\u0000&q\u0000~\u0000^q\u0000~\u00002sq\u0000~\u0000.t\u0000\u0006personq\u0000~\u0000"
+"2q\u0000~\u00004sq\u0000~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-psq\u0000~\u0000\u0013ppsq\u0000~\u00009q\u0000~\u00002t\u0000\fRegisterType"
+"q\u0000~\u0000#\u0000\u0000q\u0000~\u0000\u001eq\u0000~\u0000\u001eq\u0000~\u0000Asq\u0000~\u0000Bw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003t\u0000\u0006formalt\u0000\u0006spoken"
+"t\u0000\u0007archaicxq\u0000~\u0000%sq\u0000~\u0000&q\u0000~\u0000lq\u0000~\u00002sq\u0000~\u0000.t\u0000\bregisterq\u0000~\u00002q\u0000~\u00004s"
+"q\u0000~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-psq\u0000~\u0000\u0013ppsq\u0000~\u00009q\u0000~\u00002t\u0000\fSpellingTypeq\u0000~\u0000#\u0000\u0000"
+"q\u0000~\u0000\u001eq\u0000~\u0000\u001eq\u0000~\u0000Asq\u0000~\u0000Bw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0002t\u0000\tirregulart\u0000\bstandardxq"
+"\u0000~\u0000%sq\u0000~\u0000&q\u0000~\u0000xq\u0000~\u00002sq\u0000~\u0000.t\u0000\bspellingq\u0000~\u00002q\u0000~\u00004sq\u0000~\u0000(ppsq\u0000~\u0000"
+"*q\u0000~\u0000-psq\u0000~\u0000\u0013ppsq\u0000~\u00009q\u0000~\u00002t\u0000\tTenseTypeq\u0000~\u0000#\u0000\u0000q\u0000~\u0000\u001eq\u0000~\u0000\u001eq\u0000~\u0000A"
+"sq\u0000~\u0000Bw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\bt\u0000\u000bunspecifiedt\u0000\u0004pastt\u0000\nimperativet\u0000\u0007bei"
+"nonit\u0000\ninfinitivet\u0000\u0006futuret\u0000\u000ebareInfinitivet\u0000\u0011passivePartici"
+"plexq\u0000~\u0000%sq\u0000~\u0000&q\u0000~\u0000\u0083q\u0000~\u00002sq\u0000~\u0000.t\u0000\u0005tenseq\u0000~\u00002q\u0000~\u00004sq\u0000~\u0000*ppq\u0000~"
+"\u0000\u0016sq\u0000~\u0000.t\u0000\u000etransliteratedq\u0000~\u00002sq\u0000~\u0000*ppq\u0000~\u0000\u0016sq\u0000~\u0000.t\u0000\bundotted"
+"q\u0000~\u00002sq\u0000~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-psq\u0000~\u0000\u0013ppsr\u0000\"com.sun.msv.datatype.xs"
+"d.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0005QNameq\u0000~\u0000#q\u0000~\u0000%sq\u0000~\u0000&q\u0000~"
+"\u0000\u009bq\u0000~\u0000\u001fsq\u0000~\u0000.t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-inst"
+"anceq\u0000~\u00004sq\u0000~\u0000.t\u0000\u0003addq\u0000~\u00002sr\u0000\"com.sun.msv.grammar.Expression"
+"Pool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expression"
+"Pool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$Clo"
+"sedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/s"
+"un/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0012\u0001pq\u0000~\u0000\u0011q\u0000~\u0000\u0096q\u0000~\u0000\u000fq\u0000~\u0000)q\u0000"
+"~\u0000\u000eq\u0000~\u0000Kq\u0000~\u0000Zq\u0000~\u0000\u000bq\u0000~\u00006q\u0000~\u0000\nq\u0000~\u0000\rq\u0000~\u0000\u007fq\u0000~\u0000\u0012q\u0000~\u0000\fq\u0000~\u0000\tq\u0000~\u0000\u0010q\u0000"
+"~\u0000tq\u0000~\u0000hx"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
            extends lexicon.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(lexicon.jaxb.impl.runtime.UnmarshallingContext context) {
                super(context, "----");
            }

            protected Unmarshaller(lexicon.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return lexicon.jaxb.impl.CopulaLexiconTypeImpl.AddImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            if (("add" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 1;
                                return ;
                            }
                            break;
                        case  3 :
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  1 :
                            attIdx = context.getAttribute("", "dotted");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "gender");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "number");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "person");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "register");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "spelling");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "tense");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "transliterated");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  1 :
                            attIdx = context.getAttribute("", "dotted");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "gender");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "number");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "person");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "register");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "spelling");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "tense");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "transliterated");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  2 :
                            if (("add" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  1 :
                            if (("dotted" == ___local)&&("" == ___uri)) {
                                spawnHandlerFromEnterAttribute((((lexicon.jaxb.impl.CopulaExceptionTypeImpl)lexicon.jaxb.impl.CopulaLexiconTypeImpl.AddImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                return ;
                            }
                            if (("gender" == ___local)&&("" == ___uri)) {
                                spawnHandlerFromEnterAttribute((((lexicon.jaxb.impl.CopulaExceptionTypeImpl)lexicon.jaxb.impl.CopulaLexiconTypeImpl.AddImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                return ;
                            }
                            if (("number" == ___local)&&("" == ___uri)) {
                                spawnHandlerFromEnterAttribute((((lexicon.jaxb.impl.CopulaExceptionTypeImpl)lexicon.jaxb.impl.CopulaLexiconTypeImpl.AddImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                return ;
                            }
                            if (("person" == ___local)&&("" == ___uri)) {
                                spawnHandlerFromEnterAttribute((((lexicon.jaxb.impl.CopulaExceptionTypeImpl)lexicon.jaxb.impl.CopulaLexiconTypeImpl.AddImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                return ;
                            }
                            if (("register" == ___local)&&("" == ___uri)) {
                                spawnHandlerFromEnterAttribute((((lexicon.jaxb.impl.CopulaExceptionTypeImpl)lexicon.jaxb.impl.CopulaLexiconTypeImpl.AddImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                return ;
                            }
                            if (("spelling" == ___local)&&("" == ___uri)) {
                                spawnHandlerFromEnterAttribute((((lexicon.jaxb.impl.CopulaExceptionTypeImpl)lexicon.jaxb.impl.CopulaLexiconTypeImpl.AddImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                return ;
                            }
                            if (("tense" == ___local)&&("" == ___uri)) {
                                spawnHandlerFromEnterAttribute((((lexicon.jaxb.impl.CopulaExceptionTypeImpl)lexicon.jaxb.impl.CopulaLexiconTypeImpl.AddImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                return ;
                            }
                            if (("transliterated" == ___local)&&("" == ___uri)) {
                                spawnHandlerFromEnterAttribute((((lexicon.jaxb.impl.CopulaExceptionTypeImpl)lexicon.jaxb.impl.CopulaLexiconTypeImpl.AddImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  1 :
                            attIdx = context.getAttribute("", "dotted");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "gender");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "number");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "person");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "register");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "spelling");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "tense");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "transliterated");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                            case  1 :
                                attIdx = context.getAttribute("", "dotted");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "gender");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "number");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "person");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "register");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "spelling");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "tense");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "transliterated");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                break;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public static class RemoveImpl
        extends lexicon.jaxb.impl.CopulaExceptionTypeImpl
        implements lexicon.jaxb.CopulaLexiconType.Remove, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, lexicon.jaxb.impl.runtime.UnmarshallableObject, lexicon.jaxb.impl.runtime.XMLSerializable, lexicon.jaxb.impl.runtime.ValidatableObject
    {

        public final static java.lang.Class version = (lexicon.jaxb.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (lexicon.jaxb.CopulaLexiconType.Remove.class);
        }

        public java.lang.String ____jaxb_ri____getNamespaceURI() {
            return "";
        }

        public java.lang.String ____jaxb_ri____getLocalName() {
            return "remove";
        }

        public lexicon.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(lexicon.jaxb.impl.runtime.UnmarshallingContext context) {
            return new lexicon.jaxb.impl.CopulaLexiconTypeImpl.RemoveImpl.Unmarshaller(context);
        }

        public void serializeBody(lexicon.jaxb.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            context.startElement("", "remove");
            super.serializeURIs(context);
            context.endNamespaceDecls();
            super.serializeAttributes(context);
            context.endAttributes();
            super.serializeBody(context);
            context.endElement();
        }

        public void serializeAttributes(lexicon.jaxb.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public void serializeURIs(lexicon.jaxb.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public java.lang.Class getPrimaryInterface() {
            return (lexicon.jaxb.CopulaLexiconType.Remove.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"
+"ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"
+"mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"
+"q\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsr\u0000\u001bc"
+"om.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/da"
+"tatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/St"
+"ringPair;xq\u0000~\u0000\u0004ppsr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\ri"
+"sAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fna"
+"mespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001cL\u0000\nwhiteSpace"
+"t\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http:/"
+"/www.w3.org/2001/XMLSchemat\u0000\u0005tokensr\u00005com.sun.msv.datatype.x"
+"sd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.da"
+"tatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv."
+"grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004ppsr\u0000\u001bc"
+"om.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001cL\u0000\fnam"
+"espaceURIq\u0000~\u0000\u001cxpq\u0000~\u0000 q\u0000~\u0000\u001fsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004sr\u0000\u0011java.lang.Boolean"
+"\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000pq\u0000~\u0000\u0016sr\u0000#com.sun.msv.grammar.SimpleNa"
+"meClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001cL\u0000\fnamespaceURIq\u0000~\u0000\u001cxr\u0000\u001dc"
+"om.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0006dottedt\u0000\u0000sr\u00000com"
+".sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000\u0004sq\u0000~\u0000,\u0001q\u0000~\u00004sq\u0000~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-psq\u0000~\u0000\u0013ppsr\u0000)com.sun.msv.da"
+"tatype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util"
+"/Set;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstrain"
+"tFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFa"
+"cet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTyp"
+"et\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteType"
+"t\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001cx"
+"q\u0000~\u0000\u001bq\u0000~\u00002t\u0000\nGenderTypeq\u0000~\u0000#\u0000\u0000q\u0000~\u0000\u001eq\u0000~\u0000\u001et\u0000\u000benumerationsr\u0000\u0011ja"
+"va.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004t\u0000\u000bunspecifiedt\u0000\bf"
+"emininet\u0000\u0016masculine and femininet\u0000\tmasculinexq\u0000~\u0000%sq\u0000~\u0000&q\u0000~\u0000"
+"@q\u0000~\u00002sq\u0000~\u0000.t\u0000\u0006genderq\u0000~\u00002q\u0000~\u00004sq\u0000~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-psq\u0000~\u0000\u0013pps"
+"q\u0000~\u00009q\u0000~\u00002t\u0000\nNumberTypeq\u0000~\u0000#\u0000\u0000q\u0000~\u0000\u001eq\u0000~\u0000\u001eq\u0000~\u0000Asq\u0000~\u0000Bw\f\u0000\u0000\u0000\u0010?@\u0000"
+"\u0000\u0000\u0000\u0000\u0006t\u0000\u000bunspecifiedt\u0000\u0013singular and pluralt\u0000\u0004dualt\u0000\u000fdual and "
+"pluralt\u0000\bsingulart\u0000\u0006pluralxq\u0000~\u0000%sq\u0000~\u0000&q\u0000~\u0000Oq\u0000~\u00002sq\u0000~\u0000.t\u0000\u0006num"
+"berq\u0000~\u00002q\u0000~\u00004sq\u0000~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-psq\u0000~\u0000\u0013ppsq\u0000~\u00009q\u0000~\u00002t\u0000\nPerso"
+"nTypeq\u0000~\u0000#\u0000\u0000q\u0000~\u0000\u001eq\u0000~\u0000\u001eq\u0000~\u0000Asq\u0000~\u0000Bw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0005t\u0000\u000bunspecifie"
+"dt\u0000\u00013t\u0000\u00012t\u0000\u0003anyt\u0000\u00011xq\u0000~\u0000%sq\u0000~\u0000&q\u0000~\u0000^q\u0000~\u00002sq\u0000~\u0000.t\u0000\u0006personq\u0000~\u0000"
+"2q\u0000~\u00004sq\u0000~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-psq\u0000~\u0000\u0013ppsq\u0000~\u00009q\u0000~\u00002t\u0000\fRegisterType"
+"q\u0000~\u0000#\u0000\u0000q\u0000~\u0000\u001eq\u0000~\u0000\u001eq\u0000~\u0000Asq\u0000~\u0000Bw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003t\u0000\u0006formalt\u0000\u0006spoken"
+"t\u0000\u0007archaicxq\u0000~\u0000%sq\u0000~\u0000&q\u0000~\u0000lq\u0000~\u00002sq\u0000~\u0000.t\u0000\bregisterq\u0000~\u00002q\u0000~\u00004s"
+"q\u0000~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-psq\u0000~\u0000\u0013ppsq\u0000~\u00009q\u0000~\u00002t\u0000\fSpellingTypeq\u0000~\u0000#\u0000\u0000"
+"q\u0000~\u0000\u001eq\u0000~\u0000\u001eq\u0000~\u0000Asq\u0000~\u0000Bw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0002t\u0000\tirregulart\u0000\bstandardxq"
+"\u0000~\u0000%sq\u0000~\u0000&q\u0000~\u0000xq\u0000~\u00002sq\u0000~\u0000.t\u0000\bspellingq\u0000~\u00002q\u0000~\u00004sq\u0000~\u0000(ppsq\u0000~\u0000"
+"*q\u0000~\u0000-psq\u0000~\u0000\u0013ppsq\u0000~\u00009q\u0000~\u00002t\u0000\tTenseTypeq\u0000~\u0000#\u0000\u0000q\u0000~\u0000\u001eq\u0000~\u0000\u001eq\u0000~\u0000A"
+"sq\u0000~\u0000Bw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\bt\u0000\u000bunspecifiedt\u0000\u0004pastt\u0000\nimperativet\u0000\u0007bei"
+"nonit\u0000\ninfinitivet\u0000\u0006futuret\u0000\u000ebareInfinitivet\u0000\u0011passivePartici"
+"plexq\u0000~\u0000%sq\u0000~\u0000&q\u0000~\u0000\u0083q\u0000~\u00002sq\u0000~\u0000.t\u0000\u0005tenseq\u0000~\u00002q\u0000~\u00004sq\u0000~\u0000*ppq\u0000~"
+"\u0000\u0016sq\u0000~\u0000.t\u0000\u000etransliteratedq\u0000~\u00002sq\u0000~\u0000*ppq\u0000~\u0000\u0016sq\u0000~\u0000.t\u0000\bundotted"
+"q\u0000~\u00002sq\u0000~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-psq\u0000~\u0000\u0013ppsr\u0000\"com.sun.msv.datatype.xs"
+"d.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0005QNameq\u0000~\u0000#q\u0000~\u0000%sq\u0000~\u0000&q\u0000~"
+"\u0000\u009bq\u0000~\u0000\u001fsq\u0000~\u0000.t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-inst"
+"anceq\u0000~\u00004sq\u0000~\u0000.t\u0000\u0006removeq\u0000~\u00002sr\u0000\"com.sun.msv.grammar.Express"
+"ionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Express"
+"ionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$"
+"ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lco"
+"m/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0012\u0001pq\u0000~\u0000\u0011q\u0000~\u0000\u0096q\u0000~\u0000\u000fq\u0000~\u0000"
+")q\u0000~\u0000\u000eq\u0000~\u0000Kq\u0000~\u0000Zq\u0000~\u0000\u000bq\u0000~\u00006q\u0000~\u0000\nq\u0000~\u0000\rq\u0000~\u0000\u007fq\u0000~\u0000\u0012q\u0000~\u0000\fq\u0000~\u0000\tq\u0000~\u0000"
+"\u0010q\u0000~\u0000tq\u0000~\u0000hx"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
            extends lexicon.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(lexicon.jaxb.impl.runtime.UnmarshallingContext context) {
                super(context, "----");
            }

            protected Unmarshaller(lexicon.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return lexicon.jaxb.impl.CopulaLexiconTypeImpl.RemoveImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  0 :
                            if (("remove" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 1;
                                return ;
                            }
                            break;
                        case  1 :
                            attIdx = context.getAttribute("", "dotted");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "gender");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "number");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "person");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "register");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "spelling");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "tense");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "transliterated");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  2 :
                            if (("remove" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  1 :
                            attIdx = context.getAttribute("", "dotted");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "gender");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "number");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "person");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "register");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "spelling");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "tense");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "transliterated");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  1 :
                            if (("dotted" == ___local)&&("" == ___uri)) {
                                spawnHandlerFromEnterAttribute((((lexicon.jaxb.impl.CopulaExceptionTypeImpl)lexicon.jaxb.impl.CopulaLexiconTypeImpl.RemoveImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                return ;
                            }
                            if (("gender" == ___local)&&("" == ___uri)) {
                                spawnHandlerFromEnterAttribute((((lexicon.jaxb.impl.CopulaExceptionTypeImpl)lexicon.jaxb.impl.CopulaLexiconTypeImpl.RemoveImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                return ;
                            }
                            if (("number" == ___local)&&("" == ___uri)) {
                                spawnHandlerFromEnterAttribute((((lexicon.jaxb.impl.CopulaExceptionTypeImpl)lexicon.jaxb.impl.CopulaLexiconTypeImpl.RemoveImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                return ;
                            }
                            if (("person" == ___local)&&("" == ___uri)) {
                                spawnHandlerFromEnterAttribute((((lexicon.jaxb.impl.CopulaExceptionTypeImpl)lexicon.jaxb.impl.CopulaLexiconTypeImpl.RemoveImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                return ;
                            }
                            if (("register" == ___local)&&("" == ___uri)) {
                                spawnHandlerFromEnterAttribute((((lexicon.jaxb.impl.CopulaExceptionTypeImpl)lexicon.jaxb.impl.CopulaLexiconTypeImpl.RemoveImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                return ;
                            }
                            if (("spelling" == ___local)&&("" == ___uri)) {
                                spawnHandlerFromEnterAttribute((((lexicon.jaxb.impl.CopulaExceptionTypeImpl)lexicon.jaxb.impl.CopulaLexiconTypeImpl.RemoveImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                return ;
                            }
                            if (("tense" == ___local)&&("" == ___uri)) {
                                spawnHandlerFromEnterAttribute((((lexicon.jaxb.impl.CopulaExceptionTypeImpl)lexicon.jaxb.impl.CopulaLexiconTypeImpl.RemoveImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                return ;
                            }
                            if (("transliterated" == ___local)&&("" == ___uri)) {
                                spawnHandlerFromEnterAttribute((((lexicon.jaxb.impl.CopulaExceptionTypeImpl)lexicon.jaxb.impl.CopulaLexiconTypeImpl.RemoveImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  1 :
                            attIdx = context.getAttribute("", "dotted");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "gender");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "number");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "person");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "register");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "spelling");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "tense");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "transliterated");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                            case  1 :
                                attIdx = context.getAttribute("", "dotted");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "gender");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "number");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "person");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "register");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "spelling");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "tense");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "transliterated");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                break;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public static class ReplaceImpl
        extends lexicon.jaxb.impl.CopulaExceptionTypeImpl
        implements lexicon.jaxb.CopulaLexiconType.Replace, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, lexicon.jaxb.impl.runtime.UnmarshallableObject, lexicon.jaxb.impl.runtime.XMLSerializable, lexicon.jaxb.impl.runtime.ValidatableObject
    {

        public final static java.lang.Class version = (lexicon.jaxb.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (lexicon.jaxb.CopulaLexiconType.Replace.class);
        }

        public java.lang.String ____jaxb_ri____getNamespaceURI() {
            return "";
        }

        public java.lang.String ____jaxb_ri____getLocalName() {
            return "replace";
        }

        public lexicon.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(lexicon.jaxb.impl.runtime.UnmarshallingContext context) {
            return new lexicon.jaxb.impl.CopulaLexiconTypeImpl.ReplaceImpl.Unmarshaller(context);
        }

        public void serializeBody(lexicon.jaxb.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            context.startElement("", "replace");
            super.serializeURIs(context);
            context.endNamespaceDecls();
            super.serializeAttributes(context);
            context.endAttributes();
            super.serializeBody(context);
            context.endElement();
        }

        public void serializeAttributes(lexicon.jaxb.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public void serializeURIs(lexicon.jaxb.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public java.lang.Class getPrimaryInterface() {
            return (lexicon.jaxb.CopulaLexiconType.Replace.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"
+"ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"
+"mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"
+"q\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsr\u0000\u001bc"
+"om.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/da"
+"tatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/St"
+"ringPair;xq\u0000~\u0000\u0004ppsr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\ri"
+"sAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fna"
+"mespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001cL\u0000\nwhiteSpace"
+"t\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http:/"
+"/www.w3.org/2001/XMLSchemat\u0000\u0005tokensr\u00005com.sun.msv.datatype.x"
+"sd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.da"
+"tatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv."
+"grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004ppsr\u0000\u001bc"
+"om.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001cL\u0000\fnam"
+"espaceURIq\u0000~\u0000\u001cxpq\u0000~\u0000 q\u0000~\u0000\u001fsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004sr\u0000\u0011java.lang.Boolean"
+"\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000pq\u0000~\u0000\u0016sr\u0000#com.sun.msv.grammar.SimpleNa"
+"meClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001cL\u0000\fnamespaceURIq\u0000~\u0000\u001cxr\u0000\u001dc"
+"om.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0006dottedt\u0000\u0000sr\u00000com"
+".sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000\u0004sq\u0000~\u0000,\u0001q\u0000~\u00004sq\u0000~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-psq\u0000~\u0000\u0013ppsr\u0000)com.sun.msv.da"
+"tatype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util"
+"/Set;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstrain"
+"tFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFa"
+"cet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTyp"
+"et\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteType"
+"t\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001cx"
+"q\u0000~\u0000\u001bq\u0000~\u00002t\u0000\nGenderTypeq\u0000~\u0000#\u0000\u0000q\u0000~\u0000\u001eq\u0000~\u0000\u001et\u0000\u000benumerationsr\u0000\u0011ja"
+"va.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004t\u0000\u000bunspecifiedt\u0000\bf"
+"emininet\u0000\u0016masculine and femininet\u0000\tmasculinexq\u0000~\u0000%sq\u0000~\u0000&q\u0000~\u0000"
+"@q\u0000~\u00002sq\u0000~\u0000.t\u0000\u0006genderq\u0000~\u00002q\u0000~\u00004sq\u0000~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-psq\u0000~\u0000\u0013pps"
+"q\u0000~\u00009q\u0000~\u00002t\u0000\nNumberTypeq\u0000~\u0000#\u0000\u0000q\u0000~\u0000\u001eq\u0000~\u0000\u001eq\u0000~\u0000Asq\u0000~\u0000Bw\f\u0000\u0000\u0000\u0010?@\u0000"
+"\u0000\u0000\u0000\u0000\u0006t\u0000\u000bunspecifiedt\u0000\u0013singular and pluralt\u0000\u0004dualt\u0000\u000fdual and "
+"pluralt\u0000\bsingulart\u0000\u0006pluralxq\u0000~\u0000%sq\u0000~\u0000&q\u0000~\u0000Oq\u0000~\u00002sq\u0000~\u0000.t\u0000\u0006num"
+"berq\u0000~\u00002q\u0000~\u00004sq\u0000~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-psq\u0000~\u0000\u0013ppsq\u0000~\u00009q\u0000~\u00002t\u0000\nPerso"
+"nTypeq\u0000~\u0000#\u0000\u0000q\u0000~\u0000\u001eq\u0000~\u0000\u001eq\u0000~\u0000Asq\u0000~\u0000Bw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0005t\u0000\u000bunspecifie"
+"dt\u0000\u00013t\u0000\u00012t\u0000\u0003anyt\u0000\u00011xq\u0000~\u0000%sq\u0000~\u0000&q\u0000~\u0000^q\u0000~\u00002sq\u0000~\u0000.t\u0000\u0006personq\u0000~\u0000"
+"2q\u0000~\u00004sq\u0000~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-psq\u0000~\u0000\u0013ppsq\u0000~\u00009q\u0000~\u00002t\u0000\fRegisterType"
+"q\u0000~\u0000#\u0000\u0000q\u0000~\u0000\u001eq\u0000~\u0000\u001eq\u0000~\u0000Asq\u0000~\u0000Bw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003t\u0000\u0006formalt\u0000\u0006spoken"
+"t\u0000\u0007archaicxq\u0000~\u0000%sq\u0000~\u0000&q\u0000~\u0000lq\u0000~\u00002sq\u0000~\u0000.t\u0000\bregisterq\u0000~\u00002q\u0000~\u00004s"
+"q\u0000~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-psq\u0000~\u0000\u0013ppsq\u0000~\u00009q\u0000~\u00002t\u0000\fSpellingTypeq\u0000~\u0000#\u0000\u0000"
+"q\u0000~\u0000\u001eq\u0000~\u0000\u001eq\u0000~\u0000Asq\u0000~\u0000Bw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0002t\u0000\tirregulart\u0000\bstandardxq"
+"\u0000~\u0000%sq\u0000~\u0000&q\u0000~\u0000xq\u0000~\u00002sq\u0000~\u0000.t\u0000\bspellingq\u0000~\u00002q\u0000~\u00004sq\u0000~\u0000(ppsq\u0000~\u0000"
+"*q\u0000~\u0000-psq\u0000~\u0000\u0013ppsq\u0000~\u00009q\u0000~\u00002t\u0000\tTenseTypeq\u0000~\u0000#\u0000\u0000q\u0000~\u0000\u001eq\u0000~\u0000\u001eq\u0000~\u0000A"
+"sq\u0000~\u0000Bw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\bt\u0000\u000bunspecifiedt\u0000\u0004pastt\u0000\nimperativet\u0000\u0007bei"
+"nonit\u0000\ninfinitivet\u0000\u0006futuret\u0000\u000ebareInfinitivet\u0000\u0011passivePartici"
+"plexq\u0000~\u0000%sq\u0000~\u0000&q\u0000~\u0000\u0083q\u0000~\u00002sq\u0000~\u0000.t\u0000\u0005tenseq\u0000~\u00002q\u0000~\u00004sq\u0000~\u0000*ppq\u0000~"
+"\u0000\u0016sq\u0000~\u0000.t\u0000\u000etransliteratedq\u0000~\u00002sq\u0000~\u0000*ppq\u0000~\u0000\u0016sq\u0000~\u0000.t\u0000\bundotted"
+"q\u0000~\u00002sq\u0000~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-psq\u0000~\u0000\u0013ppsr\u0000\"com.sun.msv.datatype.xs"
+"d.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0005QNameq\u0000~\u0000#q\u0000~\u0000%sq\u0000~\u0000&q\u0000~"
+"\u0000\u009bq\u0000~\u0000\u001fsq\u0000~\u0000.t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-inst"
+"anceq\u0000~\u00004sq\u0000~\u0000.t\u0000\u0007replaceq\u0000~\u00002sr\u0000\"com.sun.msv.grammar.Expres"
+"sionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expres"
+"sionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool"
+"$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lc"
+"om/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0012\u0001pq\u0000~\u0000\u0011q\u0000~\u0000\u0096q\u0000~\u0000\u000fq\u0000~"
+"\u0000)q\u0000~\u0000\u000eq\u0000~\u0000Kq\u0000~\u0000Zq\u0000~\u0000\u000bq\u0000~\u00006q\u0000~\u0000\nq\u0000~\u0000\rq\u0000~\u0000\u007fq\u0000~\u0000\u0012q\u0000~\u0000\fq\u0000~\u0000\tq\u0000~"
+"\u0000\u0010q\u0000~\u0000tq\u0000~\u0000hx"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
            extends lexicon.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(lexicon.jaxb.impl.runtime.UnmarshallingContext context) {
                super(context, "----");
            }

            protected Unmarshaller(lexicon.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return lexicon.jaxb.impl.CopulaLexiconTypeImpl.ReplaceImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            if (("replace" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 1;
                                return ;
                            }
                            break;
                        case  3 :
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  1 :
                            attIdx = context.getAttribute("", "dotted");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "gender");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "number");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "person");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "register");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "spelling");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "tense");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "transliterated");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  2 :
                            if (("replace" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  1 :
                            attIdx = context.getAttribute("", "dotted");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "gender");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "number");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "person");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "register");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "spelling");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "tense");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "transliterated");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  1 :
                            if (("dotted" == ___local)&&("" == ___uri)) {
                                spawnHandlerFromEnterAttribute((((lexicon.jaxb.impl.CopulaExceptionTypeImpl)lexicon.jaxb.impl.CopulaLexiconTypeImpl.ReplaceImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                return ;
                            }
                            if (("gender" == ___local)&&("" == ___uri)) {
                                spawnHandlerFromEnterAttribute((((lexicon.jaxb.impl.CopulaExceptionTypeImpl)lexicon.jaxb.impl.CopulaLexiconTypeImpl.ReplaceImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                return ;
                            }
                            if (("number" == ___local)&&("" == ___uri)) {
                                spawnHandlerFromEnterAttribute((((lexicon.jaxb.impl.CopulaExceptionTypeImpl)lexicon.jaxb.impl.CopulaLexiconTypeImpl.ReplaceImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                return ;
                            }
                            if (("person" == ___local)&&("" == ___uri)) {
                                spawnHandlerFromEnterAttribute((((lexicon.jaxb.impl.CopulaExceptionTypeImpl)lexicon.jaxb.impl.CopulaLexiconTypeImpl.ReplaceImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                return ;
                            }
                            if (("register" == ___local)&&("" == ___uri)) {
                                spawnHandlerFromEnterAttribute((((lexicon.jaxb.impl.CopulaExceptionTypeImpl)lexicon.jaxb.impl.CopulaLexiconTypeImpl.ReplaceImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                return ;
                            }
                            if (("spelling" == ___local)&&("" == ___uri)) {
                                spawnHandlerFromEnterAttribute((((lexicon.jaxb.impl.CopulaExceptionTypeImpl)lexicon.jaxb.impl.CopulaLexiconTypeImpl.ReplaceImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                return ;
                            }
                            if (("tense" == ___local)&&("" == ___uri)) {
                                spawnHandlerFromEnterAttribute((((lexicon.jaxb.impl.CopulaExceptionTypeImpl)lexicon.jaxb.impl.CopulaLexiconTypeImpl.ReplaceImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                return ;
                            }
                            if (("transliterated" == ___local)&&("" == ___uri)) {
                                spawnHandlerFromEnterAttribute((((lexicon.jaxb.impl.CopulaExceptionTypeImpl)lexicon.jaxb.impl.CopulaLexiconTypeImpl.ReplaceImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  1 :
                            attIdx = context.getAttribute("", "dotted");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "gender");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "number");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "person");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "register");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "spelling");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "tense");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "transliterated");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                            case  1 :
                                attIdx = context.getAttribute("", "dotted");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "gender");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "number");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "person");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "register");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "spelling");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "tense");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "transliterated");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                break;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public class Unmarshaller
        extends lexicon.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(lexicon.jaxb.impl.runtime.UnmarshallingContext context) {
            super(context, "-----------------");
        }

        protected Unmarshaller(lexicon.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return lexicon.jaxb.impl.CopulaLexiconTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  12 :
                        attIdx = context.getAttribute("", "tense");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 15;
                            eatText1(v);
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "person");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText2(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "number");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText3(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  15 :
                        if (("add" == ___local)&&("" == ___uri)) {
                            _getAddOrReplaceOrRemove().add(((lexicon.jaxb.impl.CopulaLexiconTypeImpl.AddImpl) spawnChildFromEnterElement((lexicon.jaxb.impl.CopulaLexiconTypeImpl.AddImpl.class), 16, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("replace" == ___local)&&("" == ___uri)) {
                            _getAddOrReplaceOrRemove().add(((lexicon.jaxb.impl.CopulaLexiconTypeImpl.ReplaceImpl) spawnChildFromEnterElement((lexicon.jaxb.impl.CopulaLexiconTypeImpl.ReplaceImpl.class), 16, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("remove" == ___local)&&("" == ___uri)) {
                            _getAddOrReplaceOrRemove().add(((lexicon.jaxb.impl.CopulaLexiconTypeImpl.RemoveImpl) spawnChildFromEnterElement((lexicon.jaxb.impl.CopulaLexiconTypeImpl.RemoveImpl.class), 16, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 16;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "polarity");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText4(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  16 :
                        if (("add" == ___local)&&("" == ___uri)) {
                            _getAddOrReplaceOrRemove().add(((lexicon.jaxb.impl.CopulaLexiconTypeImpl.AddImpl) spawnChildFromEnterElement((lexicon.jaxb.impl.CopulaLexiconTypeImpl.AddImpl.class), 16, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("replace" == ___local)&&("" == ___uri)) {
                            _getAddOrReplaceOrRemove().add(((lexicon.jaxb.impl.CopulaLexiconTypeImpl.ReplaceImpl) spawnChildFromEnterElement((lexicon.jaxb.impl.CopulaLexiconTypeImpl.ReplaceImpl.class), 16, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("remove" == ___local)&&("" == ___uri)) {
                            _getAddOrReplaceOrRemove().add(((lexicon.jaxb.impl.CopulaLexiconTypeImpl.RemoveImpl) spawnChildFromEnterElement((lexicon.jaxb.impl.CopulaLexiconTypeImpl.RemoveImpl.class), 16, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "gender");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText5(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Tense = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Person = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Number = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Polarity = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Gender = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  12 :
                        attIdx = context.getAttribute("", "tense");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 15;
                            eatText1(v);
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "person");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText2(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "number");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText3(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  15 :
                        state = 16;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "polarity");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText4(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  16 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "gender");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText5(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  12 :
                        if (("tense" == ___local)&&("" == ___uri)) {
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  6 :
                        if (("person" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  3 :
                        if (("number" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  15 :
                        state = 16;
                        continue outer;
                    case  9 :
                        if (("polarity" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  16 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        if (("gender" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  5 :
                        if (("number" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("polarity" == ___local)&&("" == ___uri)) {
                            state = 12;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("tense" == ___local)&&("" == ___uri)) {
                            state = 15;
                            return ;
                        }
                        break;
                    case  12 :
                        attIdx = context.getAttribute("", "tense");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 15;
                            eatText1(v);
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  8 :
                        if (("person" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "person");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText2(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "number");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText3(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  15 :
                        state = 16;
                        continue outer;
                    case  2 :
                        if (("gender" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "polarity");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText4(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  16 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "gender");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText5(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  12 :
                            attIdx = context.getAttribute("", "tense");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 15;
                                eatText1(v);
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                        case  4 :
                            state = 5;
                            eatText3(value);
                            return ;
                        case  6 :
                            attIdx = context.getAttribute("", "person");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText2(v);
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  3 :
                            attIdx = context.getAttribute("", "number");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText3(v);
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  7 :
                            state = 8;
                            eatText2(value);
                            return ;
                        case  15 :
                            state = 16;
                            continue outer;
                        case  9 :
                            attIdx = context.getAttribute("", "polarity");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText4(v);
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  16 :
                            revertToParentFromText(value);
                            return ;
                        case  1 :
                            state = 2;
                            eatText5(value);
                            return ;
                        case  10 :
                            state = 11;
                            eatText4(value);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "gender");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText5(v);
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  13 :
                            state = 14;
                            eatText1(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
