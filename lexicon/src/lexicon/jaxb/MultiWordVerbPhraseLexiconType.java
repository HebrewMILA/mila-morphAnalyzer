//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.01.23 at 03:48:10 PM IST 
//


package lexicon.jaxb;


/**
 * 
 * Java content class for MultiWordVerbPhraseLexiconType complex type.
 * <p>The following schema fragment specifies the expected content contained within this java content object. (defined at file:/home/syjacob/automaticCode/jwsdp-1.6/jaxb/lib/hebrew_MWlexicon.xsd line 2010)
 * <p>
 * <pre>
 * &lt;complexType name="MultiWordVerbPhraseLexiconType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;choice maxOccurs="unbounded" minOccurs="0">
 *           &lt;element name="add" type="{}MultiWordVerbPhraseExceptionType" maxOccurs="unbounded" minOccurs="0"/>
 *           &lt;element name="replace" type="{}MultiWordVerbPhraseExceptionType" maxOccurs="unbounded" minOccurs="0"/>
 *           &lt;element name="remove" type="{}MultiWordVerbPhraseExceptionType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;/choice>
 *       &lt;/sequence>
 *       &lt;attribute name="binyan" type="{}BinyanType" default="unspecified" />
 *       &lt;attribute name="feminine" type="{}FeminineType" default="unspecified" />
 *       &lt;attribute name="foreign" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;attribute name="inflectBeinoni" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       &lt;attribute name="inflectBeinoniConstruct" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       &lt;attribute name="inflectBeinoniPossessive" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       &lt;attribute name="inflectFuture" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       &lt;attribute name="inflectImperative" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       &lt;attribute name="inflectInfinitive" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       &lt;attribute name="inflectInfinitiveIndependent" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;attribute name="inflectInfinitiveb" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       &lt;attribute name="inflectInfinitivel" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       &lt;attribute name="inflectOrigin" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;attribute name="inflectPast" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       &lt;attribute name="inflectionPattern" use="required" type="{http://www.w3.org/2001/XMLSchema}token" />
 *       &lt;attribute name="ipSource" type="{http://www.w3.org/2001/XMLSchema}token" default="Mila" />
 *       &lt;attribute name="root" use="required" type="{http://www.w3.org/2001/XMLSchema}token" />
 *       &lt;attribute name="type" type="{http://www.w3.org/2001/XMLSchema}token" default="halfFrozen" />
 *       &lt;attribute name="valence" type="{}ValenceType" default="unspecified" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 */
public interface MultiWordVerbPhraseLexiconType {


    /**
     * Gets the value of the type property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String}
     */
    java.lang.String getType();

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String}
     */
    void setType(java.lang.String value);

    /**
     * Gets the value of the feminine property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String}
     */
    java.lang.String getFeminine();

    /**
     * Sets the value of the feminine property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String}
     */
    void setFeminine(java.lang.String value);

    /**
     * Gets the value of the inflectInfinitiveIndependent property.
     * 
     */
    boolean isInflectInfinitiveIndependent();

    /**
     * Sets the value of the inflectInfinitiveIndependent property.
     * 
     */
    void setInflectInfinitiveIndependent(boolean value);

    /**
     * Gets the value of the inflectInfinitive property.
     * 
     */
    boolean isInflectInfinitive();

    /**
     * Sets the value of the inflectInfinitive property.
     * 
     */
    void setInflectInfinitive(boolean value);

    /**
     * Gets the value of the inflectFuture property.
     * 
     */
    boolean isInflectFuture();

    /**
     * Sets the value of the inflectFuture property.
     * 
     */
    void setInflectFuture(boolean value);

    /**
     * Gets the value of the inflectBeinoniConstruct property.
     * 
     */
    boolean isInflectBeinoniConstruct();

    /**
     * Sets the value of the inflectBeinoniConstruct property.
     * 
     */
    void setInflectBeinoniConstruct(boolean value);

    /**
     * Gets the value of the inflectBeinoniPossessive property.
     * 
     */
    boolean isInflectBeinoniPossessive();

    /**
     * Sets the value of the inflectBeinoniPossessive property.
     * 
     */
    void setInflectBeinoniPossessive(boolean value);

    /**
     * Gets the value of the ipSource property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String}
     */
    java.lang.String getIpSource();

    /**
     * Sets the value of the ipSource property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String}
     */
    void setIpSource(java.lang.String value);

    /**
     * Gets the value of the foreign property.
     * 
     */
    boolean isForeign();

    /**
     * Sets the value of the foreign property.
     * 
     */
    void setForeign(boolean value);

    /**
     * Gets the value of the inflectionPattern property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String}
     */
    java.lang.String getInflectionPattern();

    /**
     * Sets the value of the inflectionPattern property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String}
     */
    void setInflectionPattern(java.lang.String value);

    /**
     * Gets the value of the inflectBeinoni property.
     * 
     */
    boolean isInflectBeinoni();

    /**
     * Sets the value of the inflectBeinoni property.
     * 
     */
    void setInflectBeinoni(boolean value);

    /**
     * Gets the value of the inflectInfinitivel property.
     * 
     */
    boolean isInflectInfinitivel();

    /**
     * Sets the value of the inflectInfinitivel property.
     * 
     */
    void setInflectInfinitivel(boolean value);

    /**
     * Gets the value of the valence property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String}
     */
    java.lang.String getValence();

    /**
     * Sets the value of the valence property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String}
     */
    void setValence(java.lang.String value);

    /**
     * Gets the value of the inflectOrigin property.
     * 
     */
    boolean isInflectOrigin();

    /**
     * Sets the value of the inflectOrigin property.
     * 
     */
    void setInflectOrigin(boolean value);

    /**
     * Gets the value of the root property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String}
     */
    java.lang.String getRoot();

    /**
     * Sets the value of the root property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String}
     */
    void setRoot(java.lang.String value);

    /**
     * Gets the value of the inflectPast property.
     * 
     */
    boolean isInflectPast();

    /**
     * Sets the value of the inflectPast property.
     * 
     */
    void setInflectPast(boolean value);

    /**
     * Gets the value of the AddOrReplaceOrRemove property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the AddOrReplaceOrRemove property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAddOrReplaceOrRemove().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link lexicon.jaxb.MultiWordVerbPhraseLexiconType.Replace}
     * {@link lexicon.jaxb.MultiWordVerbPhraseLexiconType.Remove}
     * {@link lexicon.jaxb.MultiWordVerbPhraseLexiconType.Add}
     * 
     */
    java.util.List getAddOrReplaceOrRemove();

    /**
     * Gets the value of the binyan property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String}
     */
    java.lang.String getBinyan();

    /**
     * Sets the value of the binyan property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String}
     */
    void setBinyan(java.lang.String value);

    /**
     * Gets the value of the inflectImperative property.
     * 
     */
    boolean isInflectImperative();

    /**
     * Sets the value of the inflectImperative property.
     * 
     */
    void setInflectImperative(boolean value);

    /**
     * Gets the value of the inflectInfinitiveb property.
     * 
     */
    boolean isInflectInfinitiveb();

    /**
     * Sets the value of the inflectInfinitiveb property.
     * 
     */
    void setInflectInfinitiveb(boolean value);


    /**
     * 
     * Java content class for add element declaration.
     * <p>The following schema fragment specifies the expected content contained within this java content object. (defined at file:/home/syjacob/automaticCode/jwsdp-1.6/jaxb/lib/hebrew_MWlexicon.xsd line 2017)
     * <p>
     * <pre>
     * &lt;element name="add" type="{}MultiWordVerbPhraseExceptionType"/>
     * </pre>
     * 
     */
    public interface Add
        extends javax.xml.bind.Element, lexicon.jaxb.MultiWordVerbPhraseExceptionType
    {


    }


    /**
     * 
     * Java content class for remove element declaration.
     * <p>The following schema fragment specifies the expected content contained within this java content object. (defined at file:/home/syjacob/automaticCode/jwsdp-1.6/jaxb/lib/hebrew_MWlexicon.xsd line 2029)
     * <p>
     * <pre>
     * &lt;element name="remove" type="{}MultiWordVerbPhraseExceptionType"/>
     * </pre>
     * 
     */
    public interface Remove
        extends javax.xml.bind.Element, lexicon.jaxb.MultiWordVerbPhraseExceptionType
    {


    }


    /**
     * 
     * Java content class for replace element declaration.
     * <p>The following schema fragment specifies the expected content contained within this java content object. (defined at file:/home/syjacob/automaticCode/jwsdp-1.6/jaxb/lib/hebrew_MWlexicon.xsd line 2023)
     * <p>
     * <pre>
     * &lt;element name="replace" type="{}MultiWordVerbPhraseExceptionType"/>
     * </pre>
     * 
     */
    public interface Replace
        extends javax.xml.bind.Element, lexicon.jaxb.MultiWordVerbPhraseExceptionType
    {


    }

}
