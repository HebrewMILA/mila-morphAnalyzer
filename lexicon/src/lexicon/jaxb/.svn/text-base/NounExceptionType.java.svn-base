//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.04.11 at 01:39:43 GMT+02:00 
//


package lexicon.jaxb;


/**
 * מבנה זה משמש לטיפול במקרים יוצאי דופן שאינם מתנהגים לפי כללי הנטייה, אשר מממש המנתח המורפולוגי.
 * בפרט, מבנה זה מתאר את תכונות המילה (אולי גם הנטיות שלה) יוצאת הדופן.
 * אילוץ:
 * ======
 * אם המין (gender) הוא נקבה (feminine), אזי אין משמעות לתכונת ה- feminine (צורן נקבה) ולכן לא תופיע תכונת ה- feminine (צורן נקבה) כאשר ערך התכונה מין (gender) הוא נקבה (feminine).
 * אילוץ:
 * ======
 * אם הריבוי (number) הוא רבים (plural), אזי אין משמעות לתכונת ה- plural (צורן ריבוי) ולכן לא תופיע תכונת ה-  plural (צורן ריבוי) כאשר ערך התכונה ריבוי (number) הוא רבים (plural).
 * אילוץ:
 * ======
 * אם dual="true" אזי לא יכול להיות ש- number="singular". ז"א שמילה לא יכול להיות ביחיד וגם בזוגי בעת ובעונה אחת.
 * 
 * Java content class for NounExceptionType complex type.
 * <p>The following schema fragment specifies the expected content contained within this java content object. (defined at file:/C:/hebrew_lexicon_new.xsd line 416)
 * <p>
 * <pre>
 * &lt;complexType name="NounExceptionType">
 *   &lt;simpleContent>
 *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>token">
 *       &lt;attribute name="construct" type="{}TriStateType" default="unspecified" />
 *       &lt;attribute name="dotted" type="{http://www.w3.org/2001/XMLSchema}token" default="" />
 *       &lt;attribute name="dual" type="{}TriStateType" default="unspecified" />
 *       &lt;attribute name="feminine" type="{}FeminineType" default="irrelevant" />
 *       &lt;attribute name="gender" type="{}GenderType" default="unspecified" />
 *       &lt;attribute name="inflectConstruct" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       &lt;attribute name="inflectPossessive" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       &lt;attribute name="number" type="{}NumberType" default="unspecified" />
 *       &lt;attribute name="plural" type="{}PluralType" default="irrelevant" />
 *       &lt;attribute name="possessive" type="{}PGNType" default="unspecified" />
 *       &lt;attribute name="script" type="{}ScriptType" default="formal" />
 *       &lt;attribute name="transliterated" use="required" type="{http://www.w3.org/2001/XMLSchema}token" />
 *       &lt;attribute name="undotted" use="required" type="{http://www.w3.org/2001/XMLSchema}token" />
 *     &lt;/extension>
 *   &lt;/simpleContent>
 * &lt;/complexType>
 * </pre>
 * 
 */
public interface NounExceptionType {


    /**
     * Gets the value of the feminine property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String}
     */
    java.lang.String getFeminine();

    /**
     * Sets the value of the feminine property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String}
     */
    void setFeminine(java.lang.String value);

    /**
     * Gets the value of the possessive property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String}
     */
    java.lang.String getPossessive();

    /**
     * Sets the value of the possessive property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String}
     */
    void setPossessive(java.lang.String value);

    /**
     * Gets the value of the gender property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String}
     */
    java.lang.String getGender();

    /**
     * Sets the value of the gender property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String}
     */
    void setGender(java.lang.String value);

    /**
     * Gets the value of the inflectPossessive property.
     * 
     */
    boolean isInflectPossessive();

    /**
     * Sets the value of the inflectPossessive property.
     * 
     */
    void setInflectPossessive(boolean value);

    /**
     * Gets the value of the plural property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String}
     */
    java.lang.String getPlural();

    /**
     * Sets the value of the plural property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String}
     */
    void setPlural(java.lang.String value);

    /**
     * Gets the value of the inflectConstruct property.
     * 
     */
    boolean isInflectConstruct();

    /**
     * Sets the value of the inflectConstruct property.
     * 
     */
    void setInflectConstruct(boolean value);

    /**
     * Gets the value of the script property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String}
     */
    java.lang.String getScript();

    /**
     * Sets the value of the script property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String}
     */
    void setScript(java.lang.String value);

    /**
     * Gets the value of the transliterated property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String}
     */
    java.lang.String getTransliterated();

    /**
     * Sets the value of the transliterated property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String}
     */
    void setTransliterated(java.lang.String value);

    /**
     * Gets the value of the value property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String}
     */
    java.lang.String getValue();

    /**
     * Sets the value of the value property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String}
     */
    void setValue(java.lang.String value);

    /**
     * Gets the value of the construct property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String}
     */
    java.lang.String getConstruct();

    /**
     * Sets the value of the construct property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String}
     */
    void setConstruct(java.lang.String value);

    /**
     * Gets the value of the dual property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String}
     */
    java.lang.String getDual();

    /**
     * Sets the value of the dual property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String}
     */
    void setDual(java.lang.String value);

    /**
     * Gets the value of the number property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String}
     */
    java.lang.String getNumber();

    /**
     * Sets the value of the number property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String}
     */
    void setNumber(java.lang.String value);

    /**
     * Gets the value of the dotted property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String}
     */
    java.lang.String getDotted();

    /**
     * Sets the value of the dotted property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String}
     */
    void setDotted(java.lang.String value);

    /**
     * Gets the value of the undotted property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String}
     */
    java.lang.String getUndotted();

    /**
     * Sets the value of the undotted property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String}
     */
    void setUndotted(java.lang.String value);

}
